# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "               \
    tmux-plugins/tpm                \
    tmux-plugins/tmux-resurrect     \
"
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm

set -g default-terminal "screen-256color"
set-option -g default-command "reattach-to-user-namespace -l zsh"

set -g prefix C-a

set -g mode-mouse on
setw -g mouse-select-pane on

# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup Esc to enter copy mode
unbind [
bind Escape copy-mode
# Setup p to paste
unbind p
bind p paste-buffer
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
# Setup 'y' to copy to osx
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Vim mode pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Window splitting
unbind % # Remove default binding since we’re replacing
bind | split-window -h
bind - split-window -v

# Pane Resizeing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Vim like statusbar in Solarized dark colors
set -g status-bg "colour0"
set -g message-command-fg "colour7"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour14"
set -g message-bg "colour11"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour7"
set -g message-command-bg "colour11"
set -g status-attr "none"
set -g status-utf8 "on"
set -g pane-border-fg "colour11"
set -g status-left-attr "none"
setw -g window-status-fg "colour10"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour0"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour14"
setw -g window-status-separator ""
setw -g window-status-bg "colour0"
set -g status-left "#[fg=colour15,bg=colour14,bold] #S #[fg=colour14,bg=colour0,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour11] %Y-%m-%d  %H:%M #[fg=colour14,bg=colour11,nobold,nounderscore,noitalics]#[fg=colour15,bg=colour14] #h "
setw -g window-status-format "#[fg=colour10,bg=colour0] #I #[fg=colour10,bg=colour0] #W "
setw -g window-status-current-format "#[fg=colour0,bg=colour11,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour11] #I #[fg=colour7,bg=colour11] #W #[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]"
