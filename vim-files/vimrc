"" VIM Settings

set nocompatible               " be iMproved
filetype off                   " required for Vundle!

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/vundle
call vundle#begin()

"" let Vundle manage Vundle
Plugin 'gmarik/vundle'

"" Plugins
Plugin 'chriskempson/base16-vim'                    "Base16 Color Scheme
Plugin 'bling/vim-airline'                          "lean & mean status/tabline
Plugin 'vim-airline/vim-airline-themes'
Plugin 'airblade/vim-gitgutter'
Plugin 'blueyed/vim-diminactive'
Plugin 'ap/vim-css-color'

Plugin 'scrooloose/nerdtree'                        "NerdTree Navigation Bar
Plugin 'scrooloose/nerdcommenter'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'rking/ag.vim'

Plugin 'tpope/vim-surround.git'
Plugin 'tpope/vim-unimpaired'                       "Pairs of handy bracket mappings

Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tmux-plugins/vim-tmux-focus-events'         "Make terminal vim and tmux work better together.

Plugin 'scrooloose/syntastic'                       "Automated Syntax and Style Checking
Plugin 'editorconfig/editorconfig-vim'

Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

Plugin 'pangloss/vim-javascript'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'heavenshell/vim-jsdoc'

Plugin 'tpope/vim-markdown'
Plugin 'suan/vim-instant-markdown'

Plugin 'rizzatti/dash.vim'

Plugin 'fmoralesc/vim-pad'

" All of your Plugins must be added before the following line
call vundle#end()           " required
filetype plugin indent on   " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

"" Look
syntax on
set background=dark
let base16colorspace=256    " Access colors present in 256 colorspace
colorscheme base16-google
set gfn=Source\ Code\ Pro\ for\ Powerline:h12
"set gfn=Menlo:h14
set t_Co=256
set laststatus=2

if has("gui_running")
    set guioptions=egmt
endif

"" Common Settings
" UTF8 or die.
set encoding=utf8
set hidden
set autoindent
set showmode
set showcmd
set cursorline
" Numbered lines.
set number
" Keep cursor away from edges of screen.
set so=14

"" Tab Settings
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

"" Backspace settings
set backspace=2 " make backspace work like most other apps

"" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"" show special characters in Vim
set list
set listchars=tab:▸\ ,eol:¬

"" Key Mappings
let mapleader = ","
nnoremap <leader>m :NERDTreeToggle<cr>
" faster window navigation
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
" Press Space to turn off highlighting and clear any message already displayed.
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
" Quickly open/reload vim
nnoremap <leader>ev :split $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
set ttimeout
set ttimeoutlen=50
set colorcolumn=+1

"" OSX settings
" Make yy, D, and P work with the OSX clipboard
set clipboard=unnamed
" Preserve indentation while pasting text from the OS X clipboard
noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>
" enable mouse resizeing and scrolling
set mouse=n


"" Tab settings
:nmap \t :set expandtab tabstop=4 shiftwidth=4 softtabstop=4<CR>
:nmap \T :set expandtab tabstop=8 shiftwidth=8 softtabstop=4<CR>
:nmap \M :set noexpandtab tabstop=8 softtabstop=4 shiftwidth=4<CR>
:nmap \m :set expandtab tabstop=2 shiftwidth=2 softtabstop=2<CR>

"" Plugin Settings

" JavaScript
let g:used_javascript_libs = 'angularjs,jquery,jasmine'
" JavaScript (tabs = 2, lines = 79)
autocmd FileType javascript set sw=2
autocmd FileType javascript set ts=2
autocmd FileType javascript set sts=2
let g:jsdoc_default_mapping=0

" NERDTree
let NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']

" Syntastic
let g:syntastic_javascript_checkers = ['jscs', 'jshint']
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute " ,"trimming empty <", "unescaped &" , "lacks \"action", "is not recognized!", "discarding unexpected"]

"Ulitsnips
"" Trigger configuration
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
" :UltiSnipsEdit to open in split window.
let g:UltiSnipsEditSplit="context"

" vim-airline
let g:airline#extensions#whitespace#enabled = 0
let g:airline_powerline_fonts = 1

" instant-markdown
let g:instant_markdown_autostart = 0
let g:instant_markdown_slow = 0
nnoremap <C-m> :InstantMarkdownPreview<cr>

" Dash
:nmap <silent> <leader>d <Plug>DashSearch

" Diminactive
let g:diminactive_enable_focus = 1
let g:diminactive_buftype_blacklist = ['nofile', 'nowrite', 'acwrite', 'quickfix']

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --hidden
        \ --ignore .git
        \ --ignore .svn
        \ --ignore .DS_Store
        \ --ignore "**/*.pyc"
        \ -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" vim-pad
let g:pad#search_backend = "ag"
let g:pad#dir = "~/notes/"
let g:pad#default_file_extension = ".md"
let g:pad#window_height = 12
let g:pad#window_width = 80
