"" VIM Settings

set nocompatible               " be iMproved
filetype off                   " required for Vundle!
filetype plugin indent on      " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

"" let Vundle manage Vundle
Plugin 'gmarik/vundle'

"" Plugins
Plugin 'amuelli/vim-colors-solarized'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'bling/vim-airline'
Plugin 'kien/ctrlp.vim'
Plugin 'ervandew/supertab'
Plugin 'tpope/vim-fugitive'
Plugin 'majutsushi/tagbar'

Plugin 'garbas/vim-snipmate'
" snipmate dependencies:
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'honza/vim-snippets'

Plugin 'pangloss/vim-javascript'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'heavenshell/vim-jsdoc'
Plugin 'tpope/vim-markdown'
Plugin 'LaTeX-Box-Team/LaTeX-Box'
Plugin 'davidhalter/jedi-vim'
Plugin 'klen/python-mode'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'Keithbsmiley/investigate.vim'

"" Look
syntax enable
set background=dark
colorscheme solarized
call togglebg#map("<F5>")
set gfn=Source\ Code\ Pro\ for\ Powerline:h14
set t_Co=256
set laststatus=2

if has("gui_running")
    set guioptions=egmt
endif

"" Common Settings
" UTF8 or die.
set encoding=utf8
set hidden
set autoindent
set showmode
set showcmd
set cursorline
" Numbered lines.
set number
" Keep cursor away from edges of screen.
set so=14

"" Tab Settings
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

"" Backspace settings
set backspace=2 " make backspace work like most other apps

"" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"" show special characters in Vim
set list
set listchars=tab:▸\ ,eol:¬

"" Key Mappings
let mapleader = ","
nnoremap <leader>m :NERDTreeToggle<cr>
" faster window navigation
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
" Press Space to turn off highlighting and clear any message already displayed.
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

set ttimeout
set ttimeoutlen=50

"" OSX settings
" Make yy, D, and P work with the OSX clipboard
set clipboard=unnamed
" Preserve indentation while pasting text from the OS X clipboard
noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>


"" Tab settings
:nmap \t :set expandtab tabstop=4 shiftwidth=4 softtabstop=4<CR>
:nmap \T :set expandtab tabstop=8 shiftwidth=8 softtabstop=4<CR>
:nmap \M :set noexpandtab tabstop=8 softtabstop=4 shiftwidth=4<CR>
:nmap \m :set expandtab tabstop=2 shiftwidth=2 softtabstop=2<CR>

"" Plugin Settings

" JavaScript
let g:used_javascript_libs = 'angularjs,jquery'
" JavaScript (tabs = 2, lines = 79)
autocmd FileType javascript set sw=2
autocmd FileType javascript set ts=2
autocmd FileType javascript set sts=2
let g:jsdoc_default_mapping=0

" NERDTree
let NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']

" LatexBox
"let g:LatexBox_viewer = 'skim'
let g:LatexBox_latexmk_options = '-pvc'
let g:LatexBox_latexmk_async=1
let g:LatexBox_latexmk_preview_continuously=1

" SnipMate
let g:snipMate = {}
let g:snipMate.scope_aliases = {}
let g:snipMate.scope_aliases['python'] = 'django,python'

" Supertab & OmniComplete
let g:SuperTabDefaultCompletionType = "context"
"let g:SuperTabCompletionContexts = ['s:ContextDiscover']
"let g:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']
"let g:SuperTabContextDiscoverDiscovery = ["&completefunc:<c-p>", "&omnifunc:<c-x><c-o>"]

" jedi-vim
let g:jedi#use_tabs_not_buffers = 0

" vim-airline
let g:airline#extensions#whitespace#enabled = 0
let g:airline_powerline_fonts = 1

" pymode
let g:pymode_folding = 0
